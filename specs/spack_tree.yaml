
# Install programs with spack.
# To use: `make use specs/cli_spack.yaml`
# To run: `make spack_tree specs/spack_tree.yaml gromacs_gcc6`

spot: ./local/spack
spot_envs: ./local/envs-spack

# template for spack.yaml used below
template_basic: 
  concretization: separately
  mirrors: {}
  repos: []
  upstreams: {}
  modules:
    enable: []
  definitions: []
  packages: {}
  config: 
    checksum: false
    misc_cache: $spack/misc_cache
    source_cache: $spack/var/spack/source_cache
  specs: []
  view: false

gromacs_gcc6:
  notes: |
    This sequence installs gcc 6 which is necessary for compiling for skylake.
    Then it compiles gromacs with gcc 6 and little else.
    We pin explicitly to the system gcc (4.8.5) to prevent recompile.
    We also use bootstrap to build modules.
  envs:
    - check_compiler: gcc@4.8.5
    - bootstrap: null
    - name: env_gcc_6.4.0
      via: template_basic
      specs: ['gcc@6.4.0%gcc@4.8.5']
    - find: gcc@6.4.0
    - name: env_gromacs
      via: template_basic
      specs: ['gromacs@2019.3%gcc@6.4.0']

gromacs_centos8_gpu:
  notes: |
    Install GROMACS with native GCC 8 on CentOS8 and CUDA.
  envs:
    - find_compilers: null
    # confirm the native compiler (might vary slightly)
    - check_compiler: gcc@8.3.1
    - bootstrap: null
    # build gromacs against the native compiler
    - name: env_gromacs_2019.3_gcc_8.2.1_native
      via: template_basic
      specs: ['gromacs@2019.3 %gcc@8.3 +cuda ~mpi ^fftw~mpi ^cuda@10.2']

macos_vmd:
  notes: |
    Catalina broke 32-bit binaries so we compile vmd from source.
    Note that it was easier to simply run VMD in a docker container.
    Currently deprecated because a VMD source compile is painful.
  envs:
    - find_compilers: null
    - bootstrap: null
    - name: env_vmd_support
      via: template_basic
      specs:
        - fltk@1.3.5
        - tcl
        - tk
        - opengl@4.5

tensorflow:
  notes: Testing the tensorflow build on CentOS 8.
  envs:
    - find_compilers: null
    # update moved the native compiler up
    - check_compiler: gcc@8.3.1
    - bootstrap: null
    - name: env-tensorflow
      via: template_basic
      specs: 
        - py-tensorflow cuda_arch=75

macos_test:
  notes: Tested 2020.02.02 after updating the clone and path configs.
  envs:
    - find_compilers: null
    - name: env-macos-test
      via: template_basic
      specs:
        - curl

paraview:
  notes: |
    Lots of problems. apple-clang@11.0.0 had no gfortran. GCC on mac cannot compile cmake.
      "%gcc platform=darwin" conflicts with "cmake" [CMake does not compile with GCC on macOS yet, please use %apple-clang. See: https://gitlab.kitware.com/cmake/cmake/-/issues/21135]
    
  envs:
    - find_compilers: null
    - name: env-paraview
      via: template_basic
      specs:
        - paraview +plugins +python3 +qt ~mpi ^netcdf-c ~mpi ^hdf5 ~mpi %gcc@9.3.0
