_: !!python/module:ortho.replicator.replicator_dev
_: !replicate
  screen: install-gromacs
  spot: local
  specs:
    spack_env_spec: 
      spack:
        concretization: separately
        mirrors: {}
        repos: []
        upstreams: {}
        modules:
          enable: []
        definitions: []
        packages: {}
        config: 
          checksum: false
        specs: ['gromacs@2019.3%gcc@6.4.0']
        view: false
  script: |
    #!/bin/bash
    set -e
    # staged here
    export here=$PWD
    export ROOT=%(spot)s
    cd $ROOT
    if [ ! -d spack ]; then git clone http://github.com/spack/spack; fi
    mkdir -p env_gromacs
    cd env_gromacs
    echo -e '#!/bin/bash\n'"source $ROOT/spack/share/spack/setup-env.sh" > go.sh
    source go.sh
    cp $spack_env_spec spack.yaml
    spack concretize -f
    # bootstrap for environment-modules
    time spack bootstrap
    #! time spack install --no-checksum
    # return to the factory to register this, and the conda environment
    cd $here
    # hardcoding the environment sourcing
    echo -e '#!/bin/bash\n# source a complete factory environment for simulations' > $ROOT/env_gromacs_std.sh
    echo -e "export AMXROOT=$PWD/automacs\nexport FACTORYROOT=$PWD" >> $ROOT/env_gromacs_std.sh
    echo -e "source $(spack location -i gromacs@2019.3)/bin/GMXRC.bash" >> $ROOT/env_gromacs_std.sh
    echo -e "source $PWD/conda/bin/activate conda/envs/std" >> $ROOT/env_gromacs_std.sh
    # cleanup
    sleep 2
    rm -f screen-install-gromacs.*
