
dockerfiles: !merge_spec
  external: !import_spec 
    from: ./dockerfiles.yaml
    what: dockerfiles
  local:
    carp_meshalyzer_reqs: |
      # section: install carp and meshalyzer
      RUN apt-get -y update --fix-missing
      RUN apt-get install -y fltk1.3-dev
      RUN apt-get install -y libpng-dev
      RUN apt-get install -y libglew-dev 
      RUN apt-get install -y freeglut3-dev
    carp_source_reqs: |
      # section extra requirements when compiling from source
      RUN apt-get -y update --fix-missing
      RUN apt-get install -y python python-dev
      RUN apt-get install -y g++ gfortran 
      RUN apt-get install -y swig gengetopt zlib1g-dev liblapack-dev
      RUN apt-get install -y cmake 
    carp_meshalyzer: |
      RUN cd /tmp && \
          mkdir -p ./build-carp && \
          mkdir /usr/local/carp-1.1 && \
          cd ./build-carp && \
          wget https://carp.medunigraz.at/carpentry/cme.linux.tar.gz && \
          tar xvf cme.linux.tar.gz && \
          cd cme-1.1-linux && \
          echo "/usr/local/carp-1.1\ny\ny\ny\n" \
          | ./install_linux.sh
      RUN ln -s /usr/local/carp-1.1/meshalyzer/src/meshalyzer /usr/bin/meshalyzer
      RUN echo "source /usr/local/carp-1.1/config.sh" >> /etc/bash.bashrc
    carp_license: |
      USER root
      RUN chown user:users /usr/local/carp-1.1/license.bin
      USER user
    emacs26: |
      RUN apt-get update && apt-get install -y software-properties-common
      RUN add-apt-repository -y ppa:kelleyk/emacs
      RUN apt-get install -y emacs26
    jdk-13: |
      RUN apt-get install -y software-properties-common
      RUN add-apt-repository -y ppa:linuxuprising/java
      RUN echo debconf shared/accepted-oracle-license-v1-2 select true | debconf-set-selections
      RUN echo debconf shared/accepted-oracle-license-v1-2 seen true | debconf-set-selections
      RUN apt-get -y update --fix-missing && apt-get install -y openjdk-13-jre openjdk-13-jdk-headless && cd /tmp && wget http://ftp.br.debian.org/debian/pool/main/o/openjdk-13/openjdk-13-jdk_13.0.4+8-1_amd64.deb && apt-get install -y ./openjdk-13-jdk_13.0.4+8-1_amd64.deb && rm /tmp/openjdk-13-jdk_13.0.4+8-1_amd64.deb
    jdk-13: |
      # DEPRECATED: this method started failing circa 2020.08.20. try jdk-14 below instead
      RUN apt-get install -y software-properties-common
      RUN add-apt-repository -y ppa:linuxuprising/java
      RUN echo debconf shared/accepted-oracle-license-v1-2 select true | debconf-set-selections
      RUN echo debconf shared/accepted-oracle-license-v1-2 seen true | debconf-set-selections
      RUN apt-get -y update --fix-missing && apt-get install -y openjdk-13-jre openjdk-13-jdk-headless && cd /tmp && wget http://ftp.br.debian.org/debian/pool/main/o/openjdk-13/openjdk-13-jdk_13.0.4+8-1_amd64.deb && apt-get install -y ./openjdk-13-jdk_13.0.4+8-1_amd64.deb && rm /tmp/openjdk-13-jdk_13.0.4+8-1_amd64.deb
    jdk-14: |
      RUN add-apt-repository -y ppa:linuxuprising/java
      RUN echo debconf shared/accepted-oracle-license-v1-2 select true | debconf-set-selections
      RUN apt-get -y update --fix-missing && apt-get install -y openjdk-14-jdk
    clojure: | # https://github.com/Quantisan/docker-clojure/blob/be736864bf3e6d35c1bc6b13fd2add4a319fb92b/target/openjdk-13-buster/lein/Dockerfile
      ENV LEIN_VERSION=2.9.1
      ENV LEIN_INSTALL=/usr/local/bin/
      WORKDIR /tmp
      RUN \
      mkdir -p $LEIN_INSTALL && \
      wget -q https://raw.githubusercontent.com/technomancy/leiningen/$LEIN_VERSION/bin/lein-pkg && \
      echo "Comparing lein-pkg checksum ..." && \
      sha1sum lein-pkg && \
      echo "93be2c23ab4ff2fc4fcf531d7510ca4069b8d24a *lein-pkg" | sha1sum -c - && \
      mv lein-pkg $LEIN_INSTALL/lein && \
      chmod 0755 $LEIN_INSTALL/lein && \
      wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip && \
      wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip.asc && \
      rm leiningen-$LEIN_VERSION-standalone.zip.asc && \
      mkdir -p /usr/share/java && \
      mv leiningen-$LEIN_VERSION-standalone.zip /usr/share/java/leiningen-$LEIN_VERSION-standalone.jar
      ENV PATH=$PATH:$LEIN_INSTALL
      ENV LEIN_ROOT 1
      # Install clojure 1.10.1 so users don't have to download it every time
      RUN echo '(defproject dummy "" :dependencies [[org.clojure/clojure "1.10.1"]])' > project.clj \
        && lein deps && rm project.clj
    vtk82: |
      RUN apt-get update && apt-get install vtk
    godot: |
      RUN apt-get install -y unzip
      RUN apt-get install -y mesa-utils libgl1-mesa-glx
      WORKDIR /tmp
      RUN wget https://downloads.tuxfamily.org/godotengine/3.1.2/Godot_v3.1.2-stable_x11.64.zip
    ubuntu_mkl: |
      RUN apt-get install -y cpio
      RUN cd /tmp && \
        wget -q http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/15275/l_mkl_2019.3.199.tgz && \
        tar -xzf l_mkl_2019.3.199.tgz && \
        cd l_mkl_2019.3.199 && \
        sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \
        sed -i 's/ARCH_SELECTED=ALL/ARCH_SELECTED=INTEL64/g' silent.cfg && \
        sed -i 's/COMPONENTS=DEFAULTS/COMPONENTS=;intel-comp-l-all-vars__noarch;intel-comp-nomcu-vars__noarch;intel-openmp__x86_64;intel-tbb-libs__x86_64;intel-mkl-common__noarch;intel-mkl-installer-license__noarch;intel-mkl-core__x86_64;intel-mkl-core-rt__x86_64;intel-mkl-doc__noarch;intel-mkl-doc-ps__noarch;intel-mkl-gnu__x86_64;intel-mkl-gnu-rt__x86_64;intel-mkl-common-ps__noarch;intel-mkl-core-ps__x86_64;intel-mkl-common-c__noarch;intel-mkl-core-c__x86_64;intel-mkl-common-c-ps__noarch;intel-mkl-tbb__x86_64;intel-mkl-tbb-rt__x86_64;intel-mkl-gnu-c__x86_64;intel-mkl-common-f__noarch;intel-mkl-core-f__x86_64;intel-mkl-gnu-f-rt__x86_64;intel-mkl-gnu-f__x86_64;intel-mkl-f95-common__noarch;intel-mkl-f__x86_64;intel-mkl-psxe__noarch;intel-psxe-common__noarch;intel-psxe-common-doc__noarch;intel-compxe-pset/g' silent.cfg && \
        ./install.sh -s silent.cfg && \
        cd .. && rm -rf * && \
        rm -rf /opt/intel/.*.log /opt/intel/compilers_and_libraries_2019.3.199/licensing && \
        echo "/opt/intel/mkl/lib/intel64" >> /etc/ld.so.conf.d/intel.conf && \
        ldconfig && \
        echo "source /opt/intel/mkl/bin/mklvars.sh intel64" >> /etc/bash.bashrc
    vtk820: |
      WORKDIR /tmp
      ENV JAVA_HOME=/usr/lib/jvm/java-16-oracle
      RUN apt-get update --fix-missing && apt-get -y install cmake && \
          wget https://www.vtk.org/files/release/8.2/VTK-8.2.0.tar.gz && \
          tar xvf VTK* && cd VTK*/ && mkdir build && cd build && \
          cmake -DVTK_WRAP_JAVA:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release \
          -DVTK_JAVA_SOURCE_VERSION:STRING=1.8 -DVTK_JAVA_TARGET_VERSION:STRING=1.8 .. && \
          make -j && make install && \
          rm -rf /tmp/*VTK*
    #! note the following may be redundant with an actual project.clj
    vertigo_lein_user: |
      WORKDIR /tmp
      RUN mkdir vertigo_lein_user && cd vertigo_lein_user && echo '(defproject vertigo "0.1.0-SNAPSHOT" :plugins [[lein-git-deps "0.0.1-SNAPSHOT"] [lein-with-env-vars "0.2.0"] [cider/cider-nrepl "0.23.0"]] :git-dependencies [["https://github.com/bmillare/dj3.git"]] :dependencies [[org.clojure/clojure "1.10.0"] [org.bmillare/dj.core "0.2.0"] [com.cemerick/pomegranate "1.1.0"] [org.bmillare/dj.treefn "0.2.0"] [uncomplicate/neanderthal "0.26.1"] [nrepl "0.6.0"] [clojure-complete "0.2.5"]])' > project.clj && cat project.clj && lein install
      WORKDIR /home/user
    x11: |
      RUN apt-get -y install x11-apps
    grace_gnuplot: |
      RUN apt-get update --fix-missing && apt-get -y install grace gnuplot
    cgal: |
      RUN apt-get update --fix-missing && apt-get -y install libeigen3-dev cmake libboost-all-dev libmpfr-dev libcgal-dev
    geomview: |
      RUN apt-get install -y geomview
    meshlab: |
      RUN apt-get install -y geomview meshlab
    ffmpeg: |
      RUN apt-get -y update && apt-get install -y ffmpeg
    parallel: |
      RUN apt-get -y update && apt-get install -y parallel bc
    xvfb:
      RUN apt-get -y update && apt-get install -y xvfb
    opencarp_v6_deb: |
      WORKDIR /tmp 
      RUN wget https://opencarp.org/deb/opencarp-v6.0.deb
      RUN apt-get -y update && apt-get -y install ./opencarp-v6.0.deb && rm /tmp/opencarp-v6.0.deb
   
