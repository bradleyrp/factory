dockerfiles: !merge_spec
  external: !import_spec 
    from: ./dockerfiles.yaml
    what: dockerfiles
  local:
    python_venv: |
      RUN apt-get -y update
      RUN apt-get -y install python3-venv
    flask_example_setup: |
      WORKDIR /home/user
      RUN python3 -m venv env
      RUN /bin/bash -c "source env/bin/activate && \
          pip install Flask==1.0.2 Flask-Cors==3.0.7"
dockerfile_wd01: &dockerfile_wd01
  series:
    - bionic
    - ubuntu_build
    - ubuntu_python_latest
    - node_nvm
    - user_sudo_ubuntu
dockerfile_wd02: &dockerfile_wd02
  series:
    - bionic
    - ubuntu_build
    - ubuntu_python_latest
    - node_nvm
    - python_venv
    - user_sudo_ubuntu
    - flask_example_setup
select: !select
  ubuntu:
    image_name: &image_name_ubuntu factory:ubuntu_build
    command: docker-compose run --service-ports deploy
    visit: True
    site: !spots root
    compose:
      version: '3'
      services:
        deploy:
          entrypoint: ['/bin/bash','-l']
          build: .
          image: *image_name_ubuntu
          volumes: []
    dockerfile:
      series:
        - bionic
        - ubuntu_build
  e01:
    notes: |
      OBJECTIVE: Generic web development.
      Currently marked "e01" for "explore".
      Points to several projects in the development spot.
      !!! notes need updated
    site: !spots root
    image_name: &image_name_e01 factory:wd01
    command: docker-compose run --service-ports deploy
    visit: true
    compose:
      version: '3'
      services:
        deploy:
          entrypoint: ['/bin/bash','-l']
          build: .
          image: *image_name_e01
          volumes:
            - ./devspot/e01:/home/user/dev
          ports: 
            - 5000:5000
            - 8000:8000
            - 4200:4200
          hostname: localhost
    dockerfile: *dockerfile_wd01
  e01p2:
    notes: |
      EXAMPLE APPLICATION: flask with mongodb
      We have a swarm and a compose version.
        swarm:
          Run `docker swarm init` to start.
          Shutdown is easy with `docker stack rm e01p2`.
          End the swarm with `docker swarm leave --force`.
          See e01p2s for this version.
        compose: 
          This recipe does the standard compose. 
          To shutdown the services you need to run `docker-compose stop` 
            at the site of the docker-compose.yaml, which is less convenient.
      Note that this recipe is the first canonical multi-service recipe.
    via: e01
    mods:
      compose:
        services:
          deploy:
            entrypoint: ['/bin/bash','script.sh']
            volumes:
              - ./script.sh:/home/user/script.sh
              - ./devspot/e01:/home/user/dev
            environment: 
              STACK_NAME: e01p2
            container_name: e01p2_deploy
            ports: 
              - 5000:5000
          mongo:
            image: mongo
            restart: always
            environment:
              MONGO_INITDB_ROOT_USERNAME: root
              MONGO_INITDB_ROOT_PASSWORD: example
            container_name: e01p2_mongo
          mongo-express:
            image: mongo-express
            restart: always
            ports:
              - 8081:8081
            environment:
              ME_CONFIG_MONGODB_ADMINUSERNAME: root
              ME_CONFIG_MONGODB_ADMINPASSWORD: example
            container_name: e01p2_mongo-express
        version: '3.1'
      script: |
        #!/bin/bash
        set -e -x
        cd dev/proj02
        source venv/bin/activate 
        cd FlaskWithMongoDB
        export FLASK_ENV=development FLASK_APP=app.py 
        flask run --host=0.0.0.0
      command: docker-compose up -d
  e01b:
    notes: Example for testing recursion with the "via" key.
    via: e01p2
  e02:
    via: e01
    mods:
      dockerfile: *dockerfile_wd02
      compose:
        services:
          deploy:
            # note no PS1 changes so check venv with pip -V
            entrypoint: >
              /bin/bash -c
              "source ~/env/bin/activate && bash"

  arch-pulse:
    notes: |
      !!! notes need updated
      make docker specs/recipes/webdev.yaml name=arch-pulse rebuild
       /tmp/pulse-secure/src/pulse/pulsesvc --help
       /tmp/pulse-secure/src/pulse/pulsesvc -h vpn.jh.edu -U https://vpn.jh.edu/linux -r linux -u rbradle8 -L 5 -I
      pacman --noconfirm -Sy vim
    site: !spots root
    image_name: &image_name_arch_pulse factory:arch-pulse
    #! command: docker-compose run --service-ports deploy
    command: docker-compose run deploy
    visit: true
    compose:
      version: '3'
      services:
        deploy:
          entrypoint: ['/bin/bash','-l']
          build: .
          image: *image_name_arch_pulse
          volumes:
            - ./devspot/e01:/home/user/dev
          hostname: localhost
          network_mode: host
          privileged: true
    dockerfile:
      raw: |
        FROM archlinux
        WORKDIR /tmp
        RUN pacman --noconfirm -Sy base-devel fakeroot jshon expac git wget
        RUN pacman --noconfirm -Sy libgnome-keyring
        RUN pacman --noconfirm -Sy openssh
        RUN git clone https://aur.archlinux.org/pulse-secure.git
        RUN chown nobody pulse-secure
        WORKDIR /tmp/pulse-secure
        RUN sudo -u nobody makepkg

