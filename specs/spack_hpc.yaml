# Install programs with spack.
# To use: `make use specs/cli_spack.yaml`
# To run: `make spack_tree specs/spack_tree.yaml gromacs_gcc6`
#! DEPRECATED. see readme in spack_hpc_go.yaml

# spack clone parent (for this file)
spot: ./local
# spack environments (for this file)
spot_envs: ./local/envs_spack

# template for spack.yaml used below
template_basic: 
  concretization: separately
  mirrors: {}
  repos: []
  upstreams: {}
  modules:
    enable: []
  definitions: []
  packages: {}
  config: 
    checksum: false
  specs: []
  view: false

bc-config: &bc-config-build
  # config for building
  config: &bc-config
    install_tree: /software/apps/spack/a02
    module_roots: 
      lmod: &module-spot /software/apps/spack/m02
    build_stage:
      - "$TMPDIR/$USER/spack-stage"
    misc_cache: /software/apps/spack/a02/cache_misc
  packages: &packages
    slurm:
      paths:
        slurm@17.11.12: /software/apps/slurm/17.11.12.1.marcc
      buildable: false
      version: []
      providers: {}
      modules: {}
      compiler: []
    openssl:
      paths: {openssl@1.0.2k: /usr}
      buildable: false

openmpi-3_1_4: &openmpi-3_1_4 >-
    openmpi@3.1.4%gcc@7.4.0 +cuda +cxx_exceptions fabrics=verbs 
    +legacylaunchers+pmi schedulers=slurm ^slurm@17.11.12 ^cuda@9.2.88
    arch=linux-centos7-haswell

# base modules for gcc 7 must be cumulative for lmod
gcc-7-base: &gcc-7-base
  # include gcc for lmod
  - gcc@7.4.0 %gcc@4.8.5 arch=linux-centos7-haswell
  - gsl %gcc@7.4.0 arch=linux-centos7-haswell
  - cuda@9.2.88 %gcc@7.4.0 arch=linux-centos7-haswell
  - cuda@10.2.89 %gcc@7.4.0 arch=linux-centos7-haswell
  #! segfaults cool my dude - cuda@10.1.243 %gcc@7.4.0 arch=linux-centos7-haswell
  - cuda@10.0.130 %gcc@7.4.0 arch=linux-centos7-haswell
  - &python3-gcc-7 python@3.7.6 %gcc@7.4.0 +optimizations +uuid arch=linux-centos7-haswell
  - !chain
    - py-pip@19.3 %gcc@7.4.0 arch=linux-centos7-haswell
    - *python3-gcc-7

# standard whitelist follows for lmod modulefiles
#! todo: automatically generate the whitelist for target packages e.g. py-pip for python
#! todo: automatically load some dependencies with python e.g. py-pip
whitelist-std: &whitelist-std ['gcc', 'openmpi', 'python', 'py-pip', 'py-setuptools']

### modulefile configuration
  
bc-config-modules: &bc-config-std
  # config with modules
  config: *bc-config
  packages: *packages
  modules:
    enable: 
      - lmod
    lmod:
      all:
        conflict: []
        environment:
          unset: []
        filter:
          environment_blacklist: []
        load: []
        #! hdf5 and netcdf are pending
        suffixes:
          hdf5+cxx: serial
          netcdf+parallel-netcdf: parallel
      blacklist:
      - '%gcc@4.8.5'
      blacklist_implicits: true
      core_compilers:
      - gcc@4.8.5
      hash_length: 0
      naming_scheme: '{name}/{version}/{compiler.name}/{compiler.version}'
      hierarchy:
      - compiler
      - mpi
      verbose: false
      whitelist: *whitelist-std
      openmpi@3.4.1:
        environment:
          set:
            OMPI_MCA_mpi_warn_on_fork: '0'
          unset: []
        filter:
          environment_blacklist: []
        load: []
        conflict: []

### ENVIRONMENTS

bc-prelim:
  notes: |
    Initial test before running a compiler build.
    #! needs retested
  envs:
    - check_compiler: gcc@4.8.5
    - bootstrap: null
    - name: test_init_v01
      via: template_basic
      #! needs retested after updates below
      mods: *bc-config-build
      specs:
        - zlib%gcc@4.8.5 arch=linux-centos7-haswell
        - cmake%gcc@4.8.5 arch=linux-centos7-haswell

bc-gcc-7:
  notes: Compile gcc 7 for Blue Crab.
  envs:
    - find_compilers: null
    - check_compiler: gcc@4.8.5
    - bootstrap: null
    - name: &env_gcc_7 env_gcc_7
      via: template_basic
      # build gcc without lmod refresh
      # lmod refresh occurs after we build packages below
      mods: *bc-config-build
      specs:
        - gcc@7.4.0 %gcc@4.8.5 arch=linux-centos7-haswell
    - find: gcc@7.4.0 
      name: *env_gcc_7

bc-gcc-7-base:
  notes: Blue Crab base apps built on gcc7.
  envs:
    - check_compiler: gcc@7.4.0
    - name: &env_gcc_7_base env_gcc_7_base
      via: template_basic
      mods: *bc-config-build
      specs: !merge_lists
        - *gcc-7-base

bc-gcc-7-openmpi-3:
  notes: Blue Crab openmpi 3 built on gcc 7.
  envs:
    - check_compiler: gcc@7.4.0
    - name: &env_gcc_7_openmpi_3 env_gcc_7_openmpi_3
      via: template_basic
      mods: *bc-config-build
      specs:
        - *openmpi-3_1_4 

bc-std:
  notes: |
    Standard module tree on the new "stack" including gcc/openmpi.
    This is the first point at which we can deploy lmod.
  envs:
    - check_compiler: gcc@7.4.0
    - name: &env_std env_std
      via: template_basic
      mods: *bc-config-std
      specs: !merge_lists
        - *gcc-7-base
        - - *openmpi-3_1_4 
    # specs must match mods modules for lmod refresh
    - lmod_refresh: null
      name: *env_std
    - lmod_hide_nested: *module-spot

