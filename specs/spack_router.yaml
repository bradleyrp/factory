# SPACK ROUTER
# USAGE: `make do specs/spack_router.yaml name=test` except where otherwise
select: !select 

  # variables
  vars:
    # pointer to the recipes
    spec: &spec !orthoconf [spack_recipes, specs/spack_recipes.yaml]
    mirror: &mirror 
      name: !orthoconf [spack_mirror_name, local/local-mirror]
      spot: !orthoconf [spack_mirror_path, local/spack/mirror-spot]
    prefix: &prefix !orthoconf [spack_prefix, local/prefix]

  # RECIPE: build only
  # usage: make spack specs/spack_router.yaml build do=<name>
  build: 
    - !!python/object/apply:lib.spack.spack_env_install
      kwds:
        spec: *spec
        # cli argument to select the environment name in the spec
        do: !cli do
        target: *prefix

  # RECIPE: build with cache
  # usage: make spack specs/spack_router.yaml cache do=<name>
  cache: 
    - !!python/object/apply:lib.spack.spack_env_install
      kwds:
        spec: *spec
        # cli argument to select the environment name in the spec
        do: !cli do
        target: *prefix
    - !!python/object/apply:lib.spack.spack_env_cache
      kwds:
        spec: *spec
        cache_mirror: !!python/object/apply:lib.spack.SpackMirror 
          kwds: *mirror
        # cli argument to select the environment name in the spec
        do: !cli do

  # RECIPE: deploy to an install location
  # usage: make spack specs/spack_router.yaml deploy do=<name>
  deploy:
    # build the cache
    - !!python/object/apply:lib.spack.spack_env_cache
      kwds:
        spec: *spec
        cache_mirror: !!python/object/apply:lib.spack.SpackMirror 
          kwds: *mirror
        # cli argument to select the environment name in the spec
        do: !cli do
    # deploy to the location
    - !!python/object/apply:lib.spack.spack_install_cache
      kwds:
        spec: *spec
        target: *prefix
        do: !cli do

  # RECIPE: install without cchecking cache
  # usage: make spack specs/spack_router.yaml reinstall do=<name>
  reinstall:
    # deploy to the location
    - !!python/object/apply:lib.spack.spack_install_cache
      kwds:
        spec: *spec
        target: *prefix
        do: !cli do

  # RECIPE: full build including: build, cache, and deploy
  # setup should be run with the following command
  # usage: make spack specs/spack_router.yaml full do=setup
  # usage: make spack specs/spack_router.yaml deploy do=<name>
  #!!! lots of redundancy and repeated commands as the environment is rerun
  go:
    # compile the code
    - !!python/object/apply:lib.spack.spack_env_install
      kwds:
        spec: *spec
        # cli argument to select the environment name in the spec
        do: !cli do
        target: *prefix
    # create the build cache
    - !!python/object/apply:lib.spack.spack_env_cache
      kwds:
        spec: *spec
        cache_mirror: !!python/object/apply:lib.spack.SpackMirror 
          kwds: *mirror
        # cli argument to select the environment name in the spec
        do: !cli do
    # deploy to the location
    - !!python/object/apply:lib.spack.spack_install_cache
      kwds:
        spec: *spec
        target: *prefix
        do: !cli do

  # RECIPE: inspect an environment
  # this recipe selects on the make_env items in a spack recipe 
  #   and then runs concretize so you can inspect the environment
  live:
    - !!python/object/apply:lib.spack.spack_env_concretize
      kwds:
        spec: *spec
        # cli argument to select the environment name in the spec
        do: !cli do
        visit: !cli [visit, true]
