### SPACK on ROCKFISH deployment
### This file builds the software stack.
### See specs/rockfish/README.md for instructions.

### SETTINGS

# paths for the spack source and environments
# defaults are in local otherwise use "make set (spack|spack_envs) <path>"
#! dev: centralize all configurations
spot: !orthoconf [spack, local/spack]
spot_envs: !orthoconf [spack_envs, local/envs-spack]

### DEFS

arch: &arch "arch=linux-centos8-zen"
gcc-back-compiler: &gcc-back-compiler gcc@8.3.1
gcc-back: &gcc-back !strflush ["%", *gcc-back-compiler]
gcc-8-compiler: &gcc-8-compiler gcc@8.4.0

# whitelists
wl01: &wl01 [openmpi, gromacs]

### TEMPLATES

# spack environment build template
# note that the via tag refers to this by key not reference
#! dev: convert the via flag to pure yaml
template_basic: 
  concretization: separately
  mirrors: {}
  repos: []
  upstreams: {}
  modules:
    enable: []
  definitions: []
  packages: {}
  config: 
    checksum: false
    # avoid the default cache in the home directory
    misc_cache: $spack/misc_cache
  specs: []
  view: false

# modules templates
modules_templates:
  s01: &mod-stage-01
    enable: 
      - lmod
    lmod:
      all:
        conflict: []
        environment:
          unset: []
        filter:
          environment_blacklist: []
        load: []
      blacklist_implicits: true
      whitelist: *wl01
      core_compilers:
      - *gcc-back-compiler
      hash_length: 0
      hierarchy:
      - compiler
      - mpi
      verbose: false  

### SUPPORT

setup:
  envs:
    - name: env-lmod
      via: template_basic
      specs: ['lmod']

### DEMO

gmxdemo:
  notes: |
    Install GROMACS with native GCC 8 on CentOS8 and CUDA.
    Tested: heartland on 2020.09.05.
    Note that openmpi for GROMACS retains a hash.
    As of 2020.09.09 gromacs has an issue with cuda and fftw
      which you must fix with a patch, see specs/rockfish/README.md
  envs:
    - find_compilers: null
    #! dev: check the major gcc version i.e. detect the native and use MAJ.MIN
    - check_compiler: gcc@8.3.1
    #! dev: create a naming scheme
    #! make the environment names programmatic or use tmpdir
    - name: &env-gmxdemo env-gmxdemo
      via: template_basic
      specs: &specs-gmxdemo ['gromacs@2020.3%gcc@8.3.1+cuda+mpi^cuda@10.2.89']
      mods: &mc01
        modules: *mod-stage-01
    #! are hashes necessary on openmpi supporting gromacs?
    - lmod_refresh: null
      name: *env-gmxdemo

### SERIES A

# step 1: compile a compiler
gcc-8-compiler:
  envs:
    - find_compilers: null
    - check_compiler: *gcc-back-compiler
    - name: &env-gcc-8-compiler env-gcc-8-compiler
      via: template_basic
      mods: *mc01
      specs:
        - !str &gcc-8-out [*gcc-8-compiler, *gcc-back, *arch]
    - find: *gcc-8-compiler 
      name: *env-gcc-8-compiler
